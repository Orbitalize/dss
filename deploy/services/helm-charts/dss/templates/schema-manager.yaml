{{- $image := .Values.dss.image }}
{{- $databaseHost :=  (include "databaseHost" .) -}}
{{- $databasePort :=  (include "databasePort" .) -}}
{{- $databaseUser :=  (include "databaseUser" .) -}}
{{- $jobVersion := .Release.Revision -}} {{/* Jobs template definition is immutable, using the revision in the name forces the job to be recreated at each helm upgrade. */}}

{{- $waitForDatabase := include "init-container-wait-for-http" (dict "serviceName" "cockroachdb" "url" (printf "http://%s:8080/health" $databaseHost)) -}}
{{- $schemas := dict "rid" "4.0.0" "scd" "3.2.0" }}

{{- if .Values.yugabyte.enabled }}
{{- $waitForDatabase = include "init-container-wait-for-http" (dict "serviceName" "yb-tserver" "url" (printf "http://%s:9000/status" $databaseHost)) -}}
{{- $schemas = dict "rid" "1.0.1" "scd" "1.0.1" }}
{{- end -}}

{{- range $service, $schemaVersion := $schemas }}
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    name: {{$service}}-schema-manager-{{$jobVersion}}
  name: {{$service}}-schema-manager-{{$jobVersion}}
  namespace: default
spec:
  completions: 1
  parallelism: 1
{{/*  TODO: use selector instead of incrementing jobVersion in name to mitigate immutable template*/}}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        name: {{$service}}-schema-manager-{{$jobVersion}}
    spec:
      initContainers:
        {{- $waitForDatabase | nindent 8 }}
      containers:
        - args:
            - migrate
            - --cockroach_host={{ $databaseHost }}
            - --cockroach_port={{ $databasePort }}
            - --cockroach_user={{ $databaseUser }}
{{ if $.Values.cockroachdb.enabled }}
            - --cockroach_ssl_dir=/cockroach/cockroach-certs
            - --cockroach_ssl_mode=verify-full
            - --schemas_dir=/db-schemas/{{$service}}
{{ else }}
            - --schemas_dir=/db-schemas/yugabyte/{{$service}}
            - --cockroach_ssl_dir=/opt/yugabyte-certs/
            - --cockroach_ssl_mode=verify-full
{{ end }}
            - --db_version={{$schemaVersion}}
          command:
            - db-manager
            - migrate
          image: {{$image}}
          imagePullPolicy: IfNotPresent
          name: {{$service}}-schema-manager-{{$jobVersion}}
          stdin: false
          tty: false
          volumeMounts:
            {{- include "ca-certs:volumeMount" (dict "cockroachdb" $.Values.cockroachdb.enabled ) | nindent 12 }}
            {{- include "client-certs:volumeMount" (dict "cockroachdb" $.Values.cockroachdb.enabled ) | nindent 12 }}
      imagePullSecrets: []
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 30
      volumes:
        {{- include "ca-certs:volume" (dict "cockroachdb" $.Values.cockroachdb.enabled ) | nindent 8 }}
        {{- include "client-certs:volume" (dict "cockroachdb" $.Values.cockroachdb.enabled ) | nindent 8 }}
{{- end -}}
